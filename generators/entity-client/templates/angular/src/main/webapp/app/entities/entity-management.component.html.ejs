<div>
    <mat-toolbar id="page-heading" data-cy="<%= entityClass %>Heading">

        <div class="d-flex justify-content-between">
            <span id="page-header" jhiTranslate="<%= i18nKeyPrefix %>.home.title"><%= entityClassPluralHumanized %></span>

            <%_ if (!readOnly) { _%>
            <button mat-raised-button color="primary" id="jh-create-entity"
                data-cy="entityCreateButton" class="jh-create-entity create-<%= entityUrl %>"
                [routerLink]="['/<%= entityUrl %>/new']">
                <mat-icon>add</mat-icon>
                <span <% if (searchEngine !== false) { %>class="hidden-sm-down" <% } %> jhiTranslate="<%= i18nKeyPrefix %>.home.createLabel">
                Create a new <%= entityClassHumanized %>
                </span>
            </button>
            <%_ } _%>
        </div>


        <div id="rightGroup">
            <button mat-icon-button (click)="viewType = 'list'">
                <mat-icon>view_list</mat-icon>
            </button>
            <button mat-icon-button (click)="viewType = 'grid'">
                <mat-icon>view_comfy</mat-icon>
            </button>
        </div>
    </mat-toolbar>

    <<%= jhiPrefixDashed %>-alert-error></<%= jhiPrefixDashed %>-alert-error>

    <<%= jhiPrefixDashed %>-alert></<%= jhiPrefixDashed %>-alert>
    <%_ if (searchEngine !== false) { _%>

    <div class="row">
        <div class="col-sm-12">
            <form name="searchForm" class="form-inline">
                <div class="input-group w-100 mt-3">
                    <input type="text" class="form-control" [(ngModel)]="currentSearch" id="currentSearch" name="currentSearch" placeholder="<% if (enableTranslation) { %>{{ '<%= i18nKeyPrefix %>.home.search' | translate }}<% } else { %>Query<% } %>">

                    <button class="input-group-append btn btn-info" (click)="search(currentSearch)">
                        <fa-icon icon="search"></fa-icon>
                    </button>

                    <button class="input-group-append btn btn-danger" (click)="search('')" *ngIf="currentSearch">
                        <fa-icon icon="trash-alt"></fa-icon>
                    </button>
                </div>
            </form>
        </div>
    </div>
    <%_ } _%>

    <div class="alert alert-warning" id="no-result" *ngIf="<%= entityInstancePlural %>?.length === 0">
        <span jhiTranslate="<%= i18nKeyPrefix %>.home.notFound">No <%= entityInstancePlural %> found</span>
    </div>

    <div fxLayout="row wrap" fxLayoutGap="10px grid"
        fxLayoutAlign="center space-between"
        *ngIf="<%= entityInstancePlural %> && <%= entityInstancePlural %>.length > 0 && viewType == 'grid'">
        <div fxFlex="25%" fxFlex.md="25%" fxFlex.sm="50%" fxFlex.xs="100%" *ngFor="let <%= entityInstance %> of <%= entityInstancePlural %>; trackBy: trackId">
            <mat-card>
                <mat-card-header>
                    <mat-card-title>
                        <%_ let nameAdded = false _%>
                        <%_ for (idx in fields) {
                            const fieldName = fields[idx].fieldName;
                            if (fieldName === 'name' || fieldName === 'title') {
                                nameAdded = true
                        _%>
                                {{ <%= entityInstance %>.<%= fieldName %> }}
                            <%_ } _%>
                        <%_ } _%>
                        <%_ if (nameAdded === false) { _%>
                            <%= entityClassHumanized %>
                        <%_ } _%>
                    </mat-card-title>
                    <mat-card-subtitle>
                        <%_ for (idx in fields) {
                            const fieldName = fields[idx].fieldName;
                            if (fieldName === 'description' || fieldName === 'summary') { _%>
                                {{ <%= entityInstance %>.<%= fieldName %> }}
                            <%_ }

                            const fieldType = fields[idx].fieldType;
                            if (['Instant', 'ZonedDateTime'].includes(fieldType)) { _%>
                            <mat-icon>calendar</mat-icon> <div>{{ <%= entityInstance %>.<%= fieldName %> | date:'medium' }}</div>
                            <%_ } else if (fieldType === 'LocalDate') { _%>
                            <mat-icon>calendar</mat-icon> <div>{{ <%= entityInstance %>.<%= fieldName %> | date:'mediumDate' }}</div>
                           <%_ } _%>
                        <%_ } _%>
                    </mat-card-subtitle>
                </mat-card-header>
                <mat-card-content>
                    <ul>
                        <%_ for (idx in fields) {
                            const fieldName = fields[idx].fieldName;
                            const fieldNameCapitalized = fields[idx].fieldNameCapitalized;
                            const fieldType = fields[idx].fieldType;
                            const fieldTypeBlobContent = fields[idx].fieldTypeBlobContent;
                        _%>
                        <li>
                            <mat-icon>gavel</mat-icon>
                            <%_ if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent === 'image') { _%>
                            <div>
                                <a *ngIf="<%= entityInstance %>.<%= fieldName %>" (click)="openFile(<%= entityInstance %>.<%= fieldName %>ContentType, <%= entityInstance %>.<%= fieldName %>)">
                                    <img [src]="'data:' + <%= entityInstance %>.<%= fieldName %>ContentType + ';base64,' + <%= entityInstance %>.<%= fieldName %>" style="max-height: 30px;" alt="<%= entityInstance %> image"/>
                                </a>
                                <span *ngIf="<%= entityInstance %>.<%= fieldName %>">{{ <%= entityInstance %>.<%= fieldName %>ContentType }}, {{ byteSize(<%= entityInstance %>.<%= fieldName %>) }}</span>
                            </div>
                            <%_ } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent === 'any') { _%>
                            <div>
                                <a *ngIf="<%= entityInstance %>.<%= fieldName %>" (click)="openFile(<%= entityInstance %>.<%= fieldName %>ContentType, <%= entityInstance %>.<%= fieldName %>)" jhiTranslate="entity.action.open">open</a>
                                <span *ngIf="<%= entityInstance %>.<%= fieldName %>">{{ <%= entityInstance %>.<%= fieldName %>ContentType }}, {{ byteSize(<%= entityInstance %>.<%= fieldName %>) }}</span>
                            </div>
                            <%_ } else if (fields[idx].fieldIsEnum) { _%>
                            <div jhiTranslate="{{ '<%= frontendAppName %>.<%= fieldType %>.' + <%= entityInstance %>.<%= fieldName %> }}">{{ <%= entityInstance %>.<%= fieldName %> }}</div>
                            <%_ } else if (['Instant', 'ZonedDateTime'].includes(fieldType)) { _%>
                            <div>{{ <%= entityInstance %>.<%= fieldName %> | date:'medium' }}</div>
                            <%_ } else if (fieldType === 'LocalDate') { _%>
                            <div>{{ <%= entityInstance %>.<%= fieldName %> | date:'mediumDate' }}</div>
                            <%_ } else if (fieldType === 'Duration') { _%>
                            <div title="{{ <%= entityInstance %>.<%= fieldName %> }}">{{ <%= entityInstance %>.<%= fieldName %> | duration }}</div>
                            <%_ } else { _%>
                            <div>{{ <%= entityInstance %>.<%= fieldName %> }}</div>
                            <%_ } _%>
                        </li>
                        <%_ } _%>

                        <%_ for (idx in relationships) {
                            const relationshipType = relationships[idx].relationshipType;
                            const ownerSide = relationships[idx].ownerSide;
                            const relationshipFieldName = relationships[idx].relationshipFieldName;
                            const relationshipFieldNamePlural = relationships[idx].relationshipFieldNamePlural;
                            const otherEntityName = relationships[idx].otherEntityName;
                            const otherEntityStateName = relationships[idx].otherEntityStateName;
                            const otherEntityField = relationships[idx].otherEntityField;
                            const otherEntityFieldCapitalized = relationships[idx].otherEntityFieldCapitalized;
                            let someEntityExists = false;
                        _%>
                        <li>
                            <mat-icon>link</mat-icon>
                            <%_ if (relationshipType === 'many-to-one'
                                    || (relationshipType === 'one-to-one' && ownerSide === true)
                                    || (relationshipType === 'many-to-many' && ownerSide === true && pagination === 'no')) {
                            _%>
                            <div>
                                <%_ if (otherEntityName === 'user') { _%>
                                    <%_ if (relationshipType === 'many-to-many') { _%>
                                <span *ngFor="let <%= relationshipFieldName %> of <%= entityInstance %>.<%= relationshipFieldNamePlural %>; let last = last">
                                    {{ <%= relationshipFieldName %>.<%= otherEntityField %> }}{{ last ? '' : ', ' }}
                                </span>
                                    <%_ } else { _%>
                                        <%_ if (dto === 'no') { _%>
                                {{ <%= entityInstance + "." + relationshipFieldName + "?." + otherEntityField %> }}
                                        <%_ } else { _%>
                                {{ <%= entityInstance + "." + relationshipFieldName + otherEntityFieldCapitalized %> }}
                                        <%_ } _%>
                                    <%_ } _%>
                                <%_ } else { _%>
                                    <%_ if (relationshipType === 'many-to-many') { _%>
                                <span *ngFor="let <%= relationshipFieldName %> of <%= entityInstance %>.<%= relationshipFieldNamePlural %>; let last = last">
                                    <a class="form-control-static" [routerLink]="['/<%= otherEntityStateName %>', <%= relationshipFieldName %>?.id, 'view']">{{ <%= relationshipFieldName %>.<%= otherEntityField %> }}</a>{{ last ? '' : ', ' }}
                                </span>
                                    <%_ } else { _%>
                                        <%_ if (dto === 'no') { _%>
                                <div *ngIf="<%= entityInstance + "." + relationshipFieldName %>">
                                    <a [routerLink]="['/<%= otherEntityStateName %>', <%= entityInstance + "." + relationshipFieldName + "?.id" %>, 'view']" >{{ <%= entityInstance + "." + relationshipFieldName + "?." + otherEntityField %> }}</a>
                                </div>
                                    <%_ } else { _%>
                                <div *ngIf="<%= entityInstance + "." + relationshipFieldName + "Id" %>">
                                    <a [routerLink]="['/<%= otherEntityStateName %>', <%= entityInstance + "." + relationshipFieldName + "Id" %> %>, 'view']" >{{ <%= entityInstance + "." + relationshipFieldName + otherEntityFieldCapitalized %> }}</a>
                                </div>
                                        <%_ } _%>
                                    <%_ } _%>
                                <%_ } _%>
                            </div>
                            <%_ } else { _%>
                            <div>
                                <span *ngFor="let <%= otherEntityName %> of <%= entityInstance %>.<%= relationshipFieldNamePlural %>">
                                    <a [routerLink]="['/<%= otherEntityName %>', <%= otherEntityName %>.id, 'view']">
                                        {{ <%= otherEntityName %>.<%= otherEntityField %> }}
                                    </a>
                                </span>
                                <span *ngIf="<%= entityInstance %>.<%= relationshipFieldNamePlural %>.isEmpty()">
                                    No <%= relationshipFieldNamePlural %>
                                </span>
                            </div>
                            <%_ } _%>
                        </li>
                        <%_ } _%>
                    </ul>
                </mat-card-content>
                <mat-card-actions>
                    <button mat-button [routerLink]="['/<%= entityUrl %>', <%= entityInstance %>.id, 'view']">
                        <mat-icon>pageview</mat-icon>
                        <span>View</span>
                    </button>
                    <button mat-button [routerLink]="['/<%= entityUrl %>', <%= entityInstance %>.id,'edit']">
                        <mat-icon>edit</mat-icon>
                        <span>Edit</span>
                    </button>
                    <button mat-button (click)="delete(<%= entityInstance %>)">
                        <mat-icon>delete</mat-icon>
                        <span>Delete</span>
                    </button>
                </mat-card-actions>
            </mat-card>
        </div>
    </div>


    <div class="table-responsive" id="entities" *ngIf="<%= entityInstancePlural %> && <%= entityInstancePlural %>.length > 0 && viewType == 'list'">
        <table class="table table-striped" aria-describedby="page-heading">
            <thead>
                <tr<% if (pagination !== 'no') { %> jhiSort [(predicate)]="predicate" [(ascending)]="ascending" [callback]="<%= pagination !== 'infinite-scroll' ? 'loadPage.bind(this)' : 'reset.bind(this)'%>"<% } %>>
                    <th scope="col" <% if (pagination !== 'no') { %> jhiSortBy="id"<% } %>><span jhiTranslate="global.field.id">ID</span><% if (pagination !== 'no') { %> <fa-icon icon="sort"></fa-icon><% } %></th>
                    <%_ for (idx in fields) { _%>
                    <th scope="col" <% if (pagination !== 'no') { %> jhiSortBy="<%= fields[idx].fieldName %>"<% } %>><span jhiTranslate="<%= `${i18nKeyPrefix}.${fields[idx].fieldName}` %>"><%= fields[idx].fieldNameHumanized %></span><% if (pagination !== 'no') { %> <fa-icon icon="sort"></fa-icon><% } %></th>
                    <%_ } _%>
                    <%_ for (idx in relationships) { _%>
                        <%_ if (relationships[idx].relationshipType === 'many-to-one'
                                || (relationships[idx].relationshipType === 'one-to-one' && relationships[idx].ownerSide === true)
                                || (relationships[idx].relationshipType === 'many-to-many' && relationships[idx].ownerSide === true && pagination === 'no')) {
                            const fieldName = dto === 'no' ? "." + relationships[idx].otherEntityField : relationships[idx].otherEntityFieldCapitalized;
                        _%>
                    <th scope="col" <% if (pagination !== 'no') { %> jhiSortBy="<%= relationships[idx].relationshipName + (fieldName) %>"<% } %>><span jhiTranslate="<%= `${i18nKeyPrefix}.${relationships[idx].relationshipName}` %>"><%= relationships[idx].relationshipNameHumanized %></span><% if (pagination !== 'no') { %> <fa-icon icon="sort"></fa-icon><% } %></th>
                        <%_ } _%>
                    <%_ } _%>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody<% if (pagination === 'infinite-scroll') { %> infinite-scroll (scrolled)="loadPage(page + 1)" [infiniteScrollDisabled]="page >= links['last']" [infiniteScrollDistance]="0"<% } %>>
                <tr *ngFor="let <%= entityInstance %> of <%= entityInstancePlural %>; trackBy: trackId" data-cy="entityTable">
                    <td><a [routerLink]="['/<%= entityUrl %>', <%= entityInstance %>.id, 'view']">{{ <%= entityInstance %>.id }}</a></td>
                <%_ for (idx in fields) {
                    const fieldName = fields[idx].fieldName;
                    const fieldNameCapitalized = fields[idx].fieldNameCapitalized;
                    const fieldType = fields[idx].fieldType;
                    const fieldTypeBlobContent = fields[idx].fieldTypeBlobContent;
                _%>
                    <%_ if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent === 'image') { _%>
                    <td>
                        <a *ngIf="<%= entityInstance %>.<%= fieldName %>" (click)="openFile(<%= entityInstance %>.<%= fieldName %>ContentType, <%= entityInstance %>.<%= fieldName %>)">
                            <img [src]="'data:' + <%= entityInstance %>.<%= fieldName %>ContentType + ';base64,' + <%= entityInstance %>.<%= fieldName %>" style="max-height: 30px;" alt="<%= entityInstance %> image"/>
                        </a>
                        <span *ngIf="<%= entityInstance %>.<%= fieldName %>">{{ <%= entityInstance %>.<%= fieldName %>ContentType }}, {{ byteSize(<%= entityInstance %>.<%= fieldName %>) }}</span>
                    </td>
                    <%_ } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent === 'any') { _%>
                    <td>
                        <a *ngIf="<%= entityInstance %>.<%= fieldName %>" (click)="openFile(<%= entityInstance %>.<%= fieldName %>ContentType, <%= entityInstance %>.<%= fieldName %>)" jhiTranslate="entity.action.open">open</a>
                        <span *ngIf="<%= entityInstance %>.<%= fieldName %>">{{ <%= entityInstance %>.<%= fieldName %>ContentType }}, {{ byteSize(<%= entityInstance %>.<%= fieldName %>) }}</span>
                    </td>
                    <%_ } else if (fields[idx].fieldIsEnum) { _%>
                    <td jhiTranslate="{{ '<%= frontendAppName %>.<%= fieldType %>.' + <%= entityInstance %>.<%= fieldName %> }}">{{ <%= entityInstance %>.<%= fieldName %> }}</td>
                    <%_ } else if (['Instant', 'ZonedDateTime'].includes(fieldType)) { _%>
                    <td>{{ <%= entityInstance %>.<%= fieldName %> | date:'medium' }}</td>
                    <%_ } else if (fieldType === 'LocalDate') { _%>
                    <td>{{ <%= entityInstance %>.<%= fieldName %> | date:'mediumDate' }}</td>
                    <%_ } else if (fieldType === 'Duration') { _%>
                    <td title="{{ <%= entityInstance %>.<%= fieldName %> }}">{{ <%= entityInstance %>.<%= fieldName %> | duration }}</td>
                    <%_ } else { _%>
                    <td>{{ <%= entityInstance %>.<%= fieldName %> }}</td>
                    <%_ } _%>
                <%_ } _%>
                <%_ for (idx in relationships) {
                    const relationshipType = relationships[idx].relationshipType;
                    const ownerSide = relationships[idx].ownerSide;
                    const relationshipFieldName = relationships[idx].relationshipFieldName;
                    const relationshipFieldNamePlural = relationships[idx].relationshipFieldNamePlural;
                    const otherEntityName = relationships[idx].otherEntityName;
                    const otherEntityStateName = relationships[idx].otherEntityStateName;
                    const otherEntityField = relationships[idx].otherEntityField;
                    const otherEntityFieldCapitalized = relationships[idx].otherEntityFieldCapitalized;
                _%>
                    <%_ if (relationshipType === 'many-to-one'
                            || (relationshipType === 'one-to-one' && ownerSide === true)
                            || (relationshipType === 'many-to-many' && ownerSide === true && pagination === 'no')) {
                    _%>
                    <td>
                        <%_ if (otherEntityName === 'user') { _%>
                            <%_ if (relationshipType === 'many-to-many') { _%>
                        <span *ngFor="let <%= relationshipFieldName %> of <%= entityInstance %>.<%= relationshipFieldNamePlural %>; let last = last">
                            {{ <%= relationshipFieldName %>.<%= otherEntityField %> }}{{ last ? '' : ', ' }}
                        </span>
                            <%_ } else { _%>
                                <%_ if (dto === 'no') { _%>
                        {{ <%= entityInstance + "." + relationshipFieldName + "?." + otherEntityField %> }}
                                <%_ } else { _%>
                        {{ <%= entityInstance + "." + relationshipFieldName + otherEntityFieldCapitalized %> }}
                                <%_ } _%>
                            <%_ } _%>
                        <%_ } else { _%>
                            <%_ if (relationshipType === 'many-to-many') { _%>
                        <span *ngFor="let <%= relationshipFieldName %> of <%= entityInstance %>.<%= relationshipFieldNamePlural %>; let last = last">
                            <a class="form-control-static" [routerLink]="['/<%= otherEntityStateName %>', <%= relationshipFieldName %>?.id, 'view']">{{ <%= relationshipFieldName %>.<%= otherEntityField %> }}</a>{{ last ? '' : ', ' }}
                        </span>
                            <%_ } else { _%>
                                <%_ if (dto === 'no') { _%>
                        <div *ngIf="<%= entityInstance + "." + relationshipFieldName %>">
                            <a [routerLink]="['/<%= otherEntityStateName %>', <%= entityInstance + "." + relationshipFieldName + "?.id" %>, 'view']" >{{ <%= entityInstance + "." + relationshipFieldName + "?." + otherEntityField %> }}</a>
                        </div>
                            <%_ } else { _%>
                        <div *ngIf="<%= entityInstance + "." + relationshipFieldName + "Id" %>">
                            <a [routerLink]="['/<%= otherEntityStateName %>', <%= entityInstance + "." + relationshipFieldName + "Id" %> %>, 'view']" >{{ <%= entityInstance + "." + relationshipFieldName + otherEntityFieldCapitalized %> }}</a>
                        </div>
                                <%_ } _%>
                            <%_ } _%>
                        <%_ } _%>
                    </td>
                    <%_ } _%>
                <%_ } _%>
                    <td class="text-right">
                        <div class="btn-group">
                            <button type="submit"
                                    [routerLink]="['/<%= entityUrl %>', <%= entityInstance %>.id, 'view']"
                                    class="btn btn-info btn-sm"
                                    data-cy="entityDetailsButton">
                                <fa-icon icon="eye"></fa-icon>
                                <span class="d-none d-md-inline" jhiTranslate="entity.action.view">View</span>
                            </button>
                            <%_ if (!readOnly) { _%>

                            <button type="submit"
                                    [routerLink]="['/<%= entityUrl %>', <%= entityInstance %>.id, 'edit']"
                                    class="btn btn-primary btn-sm"
                                    data-cy="entityEditButton">
                                <fa-icon icon="pencil-alt"></fa-icon>
                                <span class="d-none d-md-inline" jhiTranslate="entity.action.edit">Edit</span>
                            </button>

                            <button type="submit" (click)="delete(<%= entityInstance %>)"
                                    class="btn btn-danger btn-sm"
                                    data-cy="entityDeleteButton">
                                <fa-icon icon="times"></fa-icon>
                                <span class="d-none d-md-inline" jhiTranslate="entity.action.delete">Delete</span>
                            </button>
                            <%_ } _%>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <%_ if (pagination === 'pagination') { _%>

    <div *ngIf="<%= entityInstancePlural %> && <%= entityInstancePlural %>.length > 0">
        <div class="row justify-content-center">
            <jhi-item-count [page]="page" [total]="totalItems" [itemsPerPage]="itemsPerPage"></jhi-item-count>
        </div>

        <div class="row justify-content-center">
            <ngb-pagination [collectionSize]="totalItems" [(page)]="ngbPaginationPage" [pageSize]="itemsPerPage" [maxSize]="5" [rotate]="true" [boundaryLinks]="true" (pageChange)="loadPage($event)"></ngb-pagination>
        </div>
    </div>
    <%_ } _%>

</div>
